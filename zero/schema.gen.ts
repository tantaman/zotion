/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { DrizzleToZeroSchema, ZeroCustomType } from "drizzle-zero";
import type * as drizzleSchema from "../server/db/schema";

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    account: {
      name: "account",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "id"
          >,
        },
        accountId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accountId"
          >,
          serverName: "account_id",
        },
        providerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "providerId"
          >,
          serverName: "provider_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "userId"
          >,
          serverName: "user_id",
        },
        accessToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accessToken"
          >,
          serverName: "access_token",
        },
        refreshToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "refreshToken"
          >,
          serverName: "refresh_token",
        },
        idToken: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "idToken"
          >,
          serverName: "id_token",
        },
        accessTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "accessTokenExpiresAt"
          >,
          serverName: "access_token_expires_at",
        },
        refreshTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "refreshTokenExpiresAt"
          >,
          serverName: "refresh_token_expires_at",
        },
        scope: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "scope"
          >,
        },
        password: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "password"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "account",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    document: {
      name: "document",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "id"
          >,
        },
        ownerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "ownerId"
          >,
          serverName: "owner_id",
        },
        workspaceId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "workspaceId"
          >,
          serverName: "workspace_id",
        },
        visibility: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "visibility"
          >,
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "title"
          >,
        },
        created: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "created"
          >,
        },
        modified: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "modified"
          >,
        },
        emoji: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "document",
            "emoji"
          >,
        },
      },
      primaryKey: ["id"],
    },
    documentBody: {
      name: "documentBody",
      columns: {
        documentId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "documentBody",
            "documentId"
          >,
          serverName: "document_id",
        },
        content: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "documentBody",
            "content"
          >,
        },
      },
      primaryKey: ["documentId"],
      serverName: "document_body",
    },
    session: {
      name: "session",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "id"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        token: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "token"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        ipAddress: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "ipAddress"
          >,
          serverName: "ip_address",
        },
        userAgent: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "userAgent"
          >,
          serverName: "user_agent",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "session",
            "userId"
          >,
          serverName: "user_id",
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "email"
          >,
        },
        emoji: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "emoji"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    verification: {
      name: "verification",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "id"
          >,
        },
        identifier: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "identifier"
          >,
        },
        value: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "value"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verification",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    workspace: {
      name: "workspace",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "workspace",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "workspace",
            "name"
          >,
        },
      },
      primaryKey: ["id"],
    },
    workspaceMember: {
      name: "workspaceMember",
      columns: {
        workspaceId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "workspaceMember",
            "workspaceId"
          >,
          serverName: "workspace_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "workspaceMember",
            "userId"
          >,
          serverName: "user_id",
        },
      },
      primaryKey: ["workspaceId", "userId"],
      serverName: "workspace_member",
    },
  },
  relationships: {
    documentBody: {
      document: [
        {
          sourceField: ["documentId"],
          destField: ["id"],
          destSchema: "document",
          cardinality: "one",
        },
      ],
    },
    document: {
      workspace: [
        {
          sourceField: ["workspaceId"],
          destField: ["id"],
          destSchema: "workspace",
          cardinality: "one",
        },
      ],
      body: [
        {
          sourceField: ["id"],
          destField: ["documentId"],
          destSchema: "documentBody",
          cardinality: "one",
        },
      ],
    },
    user: {
      workspaceMemberships: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "workspaceMember",
          cardinality: "many",
        },
      ],
    },
    workspaceMember: {
      workspace: [
        {
          sourceField: ["workspaceId"],
          destField: ["id"],
          destSchema: "workspace",
          cardinality: "one",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "user",
          cardinality: "one",
        },
      ],
    },
    workspace: {
      documents: [
        {
          sourceField: ["id"],
          destField: ["workspaceId"],
          destSchema: "document",
          cardinality: "many",
        },
      ],
      members: [
        {
          sourceField: ["id"],
          destField: ["workspaceId"],
          destSchema: "workspaceMember",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
